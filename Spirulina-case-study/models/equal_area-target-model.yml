default_megacomplex: decay

dataset_groups:
  default:
# decide which residual_function to use
# uncomment (by pressing the keys Ctrl / ) only one of these two lines
#     residual_function: non_negative_least_squares
#     residual_function: variable_projection

dataset:
  dataset1:
    initial_concentration: input1
    megacomplex: [mc1]
    irf: irf1

megacomplex:
  mc1:
    k_matrix: [km1]

k_matrix:
  km1:
    matrix:
      (s2, s1): kinetic.1
      (s5, s1): kinetic.2
      (s2, s2): kinetic.3
      (s3, s2): kinetic.4
      (s4, s2): kinetic.5
      (s2, s3): kinetic.7
      (s3, s3): kinetic.6
      (s2, s4): kinetic.8
      (s4, s4): kinetic.6
      (s5, s5): kinetic.6

# decide whether or not to use clp_constraints
# uncomment (by pressing the keys Ctrl / ) to use clp_constraints
# add the name of the compartment
# fill the wavelength interval
# in this example the spectrum of compartment s1 is equal to zero from 100-1000 nm
# constraints on other clp can be listed below that
#
# clp_constraints:
#   - type: zero
#     target: s1
#     interval:
#       - [100, 1000]
#   - type: zero
#     target: 
#     interval:
#       - [,]
#   - type: zero
#     target: 
#     interval:
#       - [,]

# decide whether or not to use clp_area_penalties
# uncomment (by pressing the keys Ctrl / ) to use clp_area_penalties
# add the names of the compartments
# fill the wavelength intervals
# add the relative area parameter and the weight of the penalty
# clp_area_penalties on other clp can be listed below that
#
# clp_area_penalties:
#   - type: equal_area
#     source: s5
#     source_intervals: [[0, 1000]]
#     target: s2
#     target_intervals: [[0, 1000]]
#     parameter: area.1
#     weight: 0.1
#   - type: equal_area
#     source: 
#     source_intervals: [[0, 1000]]
#     target: 
#     target_intervals: [[0, 1000]]
#     parameter: area.1
#     weight: 0.1
#   - type: equal_area
#     source: 
#     source_intervals: [[0, 1000]]
#     target: 
#     target_intervals: [[0, 1000]]
#     parameter: area.1
#     weight: 0.1


irf:
  irf1:
    type: spectral-gaussian
    center: irf.center
    width: irf.width
    backsweep: True
    backsweep_period: irf.backsweep
    dispersion_center: irf.dispc
    center_dispersion_coefficients: [irf.disp1, irf.disp2]


initial_concentration:
  input1:
    compartments: [s1, s2, s3, s4, s5]
    parameters: [
      input.1,
      input.0,
      input.0,
      input.0,
      input.0]

