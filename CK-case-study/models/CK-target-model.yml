default_megacomplex: decay

dataset_groups:
  default:
# decide which residual_function to use
# uncomment (by pressing the keys Ctrl / ) only one of these two lines
#     residual_function: non_negative_least_squares
#     residual_function: variable_projection

dataset:
  CK_data:
    initial_concentration: input1
    megacomplex: [mc1]
    irf: irf1

initial_concentration:
  input1:
    compartments: [s1, s2, s3, s4]
    parameters: [
      input.s1_s2,
      input.s1_s2,
      input.s3,
      input.s4
      ]

megacomplex:
  mc1:
    k_matrix: [km1]

k_matrix:
  km1:
    matrix:
      (s1, s1): kinetic.out
      (s1, s2): kinetic.1
      (s1, s3): kinetic.1
      (s2, s1): kinetic.1
      (s2, s2): kinetic.out
      (s2, s3): kinetic.2
      (s3, s1): kinetic.1_1
      (s3, s2): kinetic.2_1
      (s3, s3): kinetic.out
      (s3, s4): kinetic.3_2
      (s4, s3): kinetic.3
      (s4, s4): kinetic.out


irf:
  irf1:
    type: spectral-multi-gaussian
    center: [irf.center]
    width: [irf.width]
    dispersion_center: irf.dispc
    center_dispersion_coefficients: [irf.disp1, irf.disp2]
    backsweep: True
    backsweep_period: irf.backsweep


# decide whether or not to use clp_constraints
# uncomment (by pressing the keys Ctrl / ) to use clp_constraints
# add the name of the compartment
# fill the wavelength interval
# in this example the spectrum of compartment s1 is equal to zero from 1-1000 nm
# clp_constraints:
#   - type: zero
#     target: 
#     interval:
#       - [1, 1000]
#
# decide whether or not to use clp_relations
# uncomment (by pressing the keys Ctrl / ) to use clp_relations
# add the names of the compartments
# fill the wavelength interval
# clp_relations:
#   - source: 
#     target: 
#     parameter: rel.r1
#     interval: [[0, 1000]]
#   - source: 
#     target: 
#     parameter: rel.r1
#     interval: [[0, 1000]]
